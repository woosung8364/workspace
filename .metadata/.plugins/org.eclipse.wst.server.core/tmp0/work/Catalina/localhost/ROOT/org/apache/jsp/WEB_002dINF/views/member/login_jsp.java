/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-28 04:56:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("  <title>Login</title>\r\n");
      out.write("  <!-- 타이틀 옆에 표시되는 아이콘 링크 -->\r\n");
      out.write("  <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"img/favicon1.ico\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../css/style.css\">\r\n");
      out.write("  <script defer src=\"js/lib/jquery-3.1.1.min.js\"></script>\r\n");
      out.write("  <script defer src=\"js/login.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("  <!-- 헤더 -->\r\n");
      out.write("  <header id=\"login_header\">\r\n");
      out.write("    <!-- 헤더 콘텐츠를 가운대 정렬하기 위한 영역설정 -->\r\n");
      out.write("    <div class=\"login_header_wrap\">\r\n");
      out.write("       <!-- 로고 이미지 -->\r\n");
      out.write("       <h1 class=\"logo\">\r\n");
      out.write("        <a href=\"/\">\r\n");
      out.write("          <img src=\"../img/hera_logo.png\" alt=\"logo\">\r\n");
      out.write("        </a>\r\n");
      out.write("      </h1>\r\n");
      out.write("    </div>\r\n");
      out.write("  </header>\r\n");
      out.write("\r\n");
      out.write("  <!-- 로그인 컨텐츠 -->\r\n");
      out.write("  <div class=\"login_contents\">\r\n");
      out.write("    <h1 id=\"login_first\">아모레퍼시픽 뷰티포인트 통합회원<br>\r\n");
      out.write("      아이디로 로그인해주세요.\r\n");
      out.write("    </h1>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/signin\" class=\"uid_form\" method=\"post\">\r\n");
      out.write("    <!-- 아이디 입력 텍스트칸 -->\r\n");
      out.write("    <input type=\"text\" name=\"uid\" id=\"uid\" placeholder=\"아이디 입력\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 비밀번호 입력 텍스트칸 -->\r\n");
      out.write("    <input type=\"text\" name=\"upw\" id=\"upw\" placeholder=\"비밀번호 입력\">\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 로그인 정보 제출 -->\r\n");
      out.write("    <button class=\"login\" type=\"submit\">로그인</button>\r\n");
      out.write("  </form>\r\n");
      out.write("\r\n");
      out.write("    <!-- 모바일 , 카카오 , 네이버 , 기타 로그인  -->\r\n");
      out.write("    <div class=\"platform_login\">\r\n");
      out.write("\r\n");
      out.write("      <!-- 모바일 -->\r\n");
      out.write("      <div class=\"login_way lw1\">\r\n");
      out.write("        <a href=\"\">\r\n");
      out.write("          <img src=\"../img/login_mobite_bt.png\" alt=\"\">\r\n");
      out.write("          <p class=login_way_text>휴대폰</p>\r\n");
      out.write("        </a>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- 카카오 -->\r\n");
      out.write("      <div class=\"login_way lw2\">\r\n");
      out.write("        <a href=\"\">\r\n");
      out.write("          <img src=\"../img/login_kakao_bt.png\" alt=\"\">\r\n");
      out.write("          <p class=login_way_text>카카오</p>\r\n");
      out.write("        </a>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- 네이버 -->\r\n");
      out.write("      <div class=\"login_way lw3\">\r\n");
      out.write("        <a href=\"\">\r\n");
      out.write("          <img src=\"../img/login_naver_bt.png\" alt=\"\">\r\n");
      out.write("          <p class=login_way_text>네이버</p>\r\n");
      out.write("        </a>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- 기타 -->\r\n");
      out.write("      <div class=\"login_way lw4\">\r\n");
      out.write("        <a href=\"\">\r\n");
      out.write("          <img src=\"../img/login_else_btn.png\" alt=\"\">\r\n");
      out.write("          <p class=login_way_text>기타</p>\r\n");
      out.write("        </a>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 아이디 , 비밀번호 찾기 -->\r\n");
      out.write("    <div class=\"find_account\">\r\n");
      out.write("      <a href=\"\">\r\n");
      out.write("        <p class=\"find_id\">아이디 찾기</p>\r\n");
      out.write("      </a>\r\n");
      out.write("      <a href=\"\">\r\n");
      out.write("        <p class=\"find_pw\">비밀번호 찾기</p>\r\n");
      out.write("      </a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 회원가입 -->\r\n");
      out.write("\r\n");
      out.write("    <!-- 회원가입 전체영역 -->\r\n");
      out.write("    <div class=\"regist_account\" id=\"regist\">\r\n");
      out.write("      <!-- 전체영역을 감싸는 a 태그 -->\r\n");
      out.write("      <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/membership\" class=\"regist_account_wrap\">\r\n");
      out.write("        <!-- 텍스트를 정렬하기위한 영역 -->\r\n");
      out.write("        <div class=\"regist_account_text\">\r\n");
      out.write("        <p>아직 회원이 아니세요?</p>\r\n");
      out.write("        <p>회원가입 >></p>\r\n");
      out.write("      </div>\r\n");
      out.write("      </a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
