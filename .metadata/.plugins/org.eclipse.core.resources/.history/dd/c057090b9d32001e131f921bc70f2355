package ezen.shoppingmall.web.work.shopping.controller;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import ezen.shoppingmall.domain.common.factory.ServiceFactory;
import ezen.shoppingmall.domain.product.dto.Product;
import ezen.shoppingmall.domain.product.service.ProductService;
import ezen.shoppingmall.web.mvc.controller.HttpController;
/**
 * /detail 요청에 대한 세부 핸들러
 */
public class DetailController implements HttpController{
	ProductService productService = ServiceFactory.getInstance().getProductService();
	@Override
	public String process(Map<String, String> paramMap, Map<String, Object> model, HttpServletRequest request,
			HttpServletResponse response) {
//		detail 페이지 경로 설정
		String viewName = "shopping/detail";
		
		// detail 페이지로 전달된 상품 ID 가져오기
//		사용자가 요청한 proName 파라미터 값을 가져옵니다. 이 값은 상품의 이름을 나타냅니다.
		String productName = request.getParameter("proName");
		
//		조회한 상품 정보를 세션에 "product"라는 이름으로 저장합니다. 이렇게 세션에 저장된 상품 정보는 뷰에서 사용될 수 있습니다.
		Product product = productService.readProduct(productName);
		request.getSession().setAttribute("product", product);
		// 이미지 URL 생성
		String imgPath = "/img/hera/";
		String imgName = product.getProImg(); // 상품 이미지 파일명 (확장자 포함)
		String imageUrl = imgPath + imgName; // 단일 이미지 URL
		
		// 상품 가격 포맷팅
		NumberFormat numberFormat = new DecimalFormat("#,###");

		// 상품 가격 가져오기
		int productPrice = product.getProPrice();

		// 숫자를 천 단위마다 쉼표를 추가하여 포맷팅
		String formattedPrice = numberFormat.format(productPrice);
		
		model.put("imageUrl",imageUrl);
		model.put("product", product);
		model.put("formattedPrice",formattedPrice);
		
		
		return viewName;
	}

}













