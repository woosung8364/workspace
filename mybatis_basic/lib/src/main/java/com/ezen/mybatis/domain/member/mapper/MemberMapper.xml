<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<!-- 패키지 기능 : select 이름이 중복되어 충돌되는걸 방지해준다 -->
<!-- mapper 안의 select 태그들을 해당하는 경로로 저장하겠다~  -->
<mapper namespace="com.ezen.mybatis.domain.member.mapper.MemberMapper">
	
	
	<!--  오늘 날짜 조회 -->
	<select id="findToDate" resultType="string">
		SELECT sysdate "today"
		FROM dual
	</select>
	
	
	<!-- 멤버 등록 -->
	<insert id="create" parameterType="Member">
		INSERT INTO member 
		            (id ,
		            name ,
		            email ,
		            passwd ,
		            regdate 
		            )  
		VALUES     (
		            #{id} ,
		            #{name} ,
		            #{email} ,
		            #{passwd} ,,
		            TO_DATE(#{regdate}, 'YYYY-MM-DD') 
		           )
	</insert>
	
	
	<!-- select 태그를 이용하여 전체사원 조회를 위한 SQL 매핑 -->
	<select id="findByAll" resultType="Member" >
		SELECT id                      AS "id", 
		       name                       AS "name", 
		       email                            AS "email", 
		       passwd                    AS "passwd", 
		       TO_CHAR(regdate, 'YYYY-MM-DD') AS "regdate" 
		FROM   member 
		ORDER  BY regdate ASC
	</select>
	
	<!-- 사원번호로 사원 조회 -->
	<select id="findById"  parameterType="string" resultType="Member">
		SELECT id                      "id", 
		       name                       "name", 
		       email                            "email", 
		       TO_CHAR(regdate, 'YYYY-MM-DD') "regdate", 
		FROM   member
		WHERE  id = #{value} 
	</select>
	
	
	
	<!-- 사원 정보 수정 -->
	<update id="update" parameterType="Member">
		UPDATE member
		SET    salary = #{salary}
		WHERE  id = #{id}
	</update>
	
	<!-- 사원 정보 수정(set, if 태그를 이용한 동적 SQL) -->
	<update id="update2" parameterType="Member">
		UPDATE member
		<set>
	        <if test="name != null">name = #{name},</if>
	        <if test="passwd != null">passwd = #{passwd},</if>
	    </set>
	    WHERE id = #{id}
	</update>
	
	<!-- 사원 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM member
		WHERE  id = #{value}
	</delete>
	
	<!-- 동적 SQL -->
	<select id="search" parameterType="map" resultType="Member">
		SELECT id  , 
		       name , 
		       regdate
		FROM   member
		<if test="type != null">
			<choose>
				<when test="type == 'id'">
				WHERE id = #{value}
				</when>
				<when test="type == 'name'">
				WHERE name like '%' || #{value}
				</when>
				<otherwise></otherwise>
			</choose>
		</if>
	</select>
</mapper>